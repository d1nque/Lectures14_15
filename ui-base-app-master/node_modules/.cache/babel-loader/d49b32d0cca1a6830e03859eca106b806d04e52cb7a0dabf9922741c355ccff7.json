{"ast":null,"code":"import { getToken } from 'token';\nconst getHeaders = () => ({\n  Accept: 'application/json',\n  Authorization: `Bearer ${getToken()}`,\n  'Content-Type': 'application/json'\n});\nconst fetchGet = _ref => {\n  let {\n    params = {},\n    url\n  } = _ref;\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(url, {\n    headers: getHeaders(),\n    method: 'GET'\n  });\n};\nconst fetchPost = _ref2 => {\n  let {\n    body,\n    params = {},\n    url\n  } = _ref2;\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(url, {\n    body: JSON.stringify(body),\n    headers: getHeaders(),\n    method: 'POST'\n  });\n};\nexport const getJson = _ref3 => {\n  let {\n    params,\n    url\n  } = _ref3;\n  return fetchGet({\n    params,\n    url\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};\nexport const postJson = _ref4 => {\n  let {\n    body,\n    params,\n    url\n  } = _ref4;\n  return fetchPost({\n    body,\n    params,\n    url\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};\nconst fetchDelete = _ref5 => {\n  let {\n    params = {},\n    url\n  } = _ref5;\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(url, {\n    headers: getHeaders(),\n    method: 'DELETE'\n  });\n};\nexport const deleteJson = _ref6 => {\n  let {\n    params,\n    url\n  } = _ref6;\n  return fetchDelete({\n    params,\n    url\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};\nconst fetchPut = _ref7 => {\n  let {\n    params = {},\n    url\n  } = _ref7;\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(url, {\n    headers: getHeaders(),\n    method: 'PUT'\n  });\n};\nexport const putJson = _ref8 => {\n  let {\n    params,\n    url\n  } = _ref8;\n  return fetchPut({\n    params,\n    url\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};","map":{"version":3,"names":["getToken","getHeaders","Accept","Authorization","fetchGet","params","url","URL","search","URLSearchParams","toString","fetch","headers","method","fetchPost","body","JSON","stringify","getJson","then","response","ok","json","postJson","fetchDelete","deleteJson","fetchPut","putJson"],"sources":["C:/Users/d1nque/Desktop/ui-base-app-master/src/requests/index.js"],"sourcesContent":["import {\n  getToken,\n} from 'token';\n\nconst getHeaders = () => ({\n  Accept: 'application/json',\n  Authorization: `Bearer ${getToken()}`,\n  'Content-Type': 'application/json',\n});\n\nconst fetchGet = ({ params = {}, url }) => {\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(\n    url,\n    {\n      headers: getHeaders(),\n      method: 'GET',\n    }\n  );\n};\n\nconst fetchPost = ({ body, params = {}, url }) => {\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n\n  return fetch(\n    url,\n    {\n      body: JSON.stringify(body),\n      headers: getHeaders(),\n      method: 'POST',\n    }\n  );\n};\n\nexport const getJson = ({\n  params,\n  url,\n}) => {\n  return fetchGet({\n    params,\n    url,\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};\n\nexport const postJson = ({\n  body,\n  params,\n  url,\n}) => {\n  return fetchPost({\n    body,\n    params,\n    url,\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};\n\n\nconst fetchDelete = ({ params = {}, url }) => {\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(\n    url,\n    {\n      headers: getHeaders(),\n      method: 'DELETE',\n    }\n  );\n};\n\nexport const deleteJson = ({\n  params,\n  url,\n}) => {\n  return fetchDelete({\n    params,\n    url,\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};\n\n\nconst fetchPut = ({ params = {}, url }) => {\n  url = new URL(url);\n  url.search = new URLSearchParams(params).toString();\n  return fetch(\n    url,\n    {\n      headers: getHeaders(),\n      method: 'PUT',\n    }\n  );\n};\n\nexport const putJson = ({\n  params,\n  url,\n}) => {\n  return fetchPut({\n    params,\n    url,\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  });\n};"],"mappings":"AAAA,SACEA,QAAQ,QACH,OAAO;AAEd,MAAMC,UAAU,GAAG,OAAO;EACxBC,MAAM,EAAE,kBAAkB;EAC1BC,aAAa,EAAG,UAASH,QAAQ,EAAG,EAAC;EACrC,cAAc,EAAE;AAClB,CAAC,CAAC;AAEF,MAAMI,QAAQ,GAAG,QAA0B;EAAA,IAAzB;IAAEC,MAAM,GAAG,CAAC,CAAC;IAAEC;EAAI,CAAC;EACpCA,GAAG,GAAG,IAAIC,GAAG,CAACD,GAAG,CAAC;EAClBA,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAAC,CAACK,QAAQ,EAAE;EACnD,OAAOC,KAAK,CACVL,GAAG,EACH;IACEM,OAAO,EAAEX,UAAU,EAAE;IACrBY,MAAM,EAAE;EACV,CAAC,CACF;AACH,CAAC;AAED,MAAMC,SAAS,GAAG,SAAgC;EAAA,IAA/B;IAAEC,IAAI;IAAEV,MAAM,GAAG,CAAC,CAAC;IAAEC;EAAI,CAAC;EAC3CA,GAAG,GAAG,IAAIC,GAAG,CAACD,GAAG,CAAC;EAClBA,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAAC,CAACK,QAAQ,EAAE;EAEnD,OAAOC,KAAK,CACVL,GAAG,EACH;IACES,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;IAC1BH,OAAO,EAAEX,UAAU,EAAE;IACrBY,MAAM,EAAE;EACV,CAAC,CACF;AACH,CAAC;AAED,OAAO,MAAMK,OAAO,GAAG,SAGjB;EAAA,IAHkB;IACtBb,MAAM;IACNC;EACF,CAAC;EACC,OAAOF,QAAQ,CAAC;IACdC,MAAM;IACNC;EACF,CAAC,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;IACxB;IACA,MAAMF,QAAQ;EAChB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAG,SAIlB;EAAA,IAJmB;IACvBR,IAAI;IACJV,MAAM;IACNC;EACF,CAAC;EACC,OAAOQ,SAAS,CAAC;IACfC,IAAI;IACJV,MAAM;IACNC;EACF,CAAC,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;IACxB;IACA,MAAMF,QAAQ;EAChB,CAAC,CAAC;AACJ,CAAC;AAGD,MAAMI,WAAW,GAAG,SAA0B;EAAA,IAAzB;IAAEnB,MAAM,GAAG,CAAC,CAAC;IAAEC;EAAI,CAAC;EACvCA,GAAG,GAAG,IAAIC,GAAG,CAACD,GAAG,CAAC;EAClBA,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAAC,CAACK,QAAQ,EAAE;EACnD,OAAOC,KAAK,CACVL,GAAG,EACH;IACEM,OAAO,EAAEX,UAAU,EAAE;IACrBY,MAAM,EAAE;EACV,CAAC,CACF;AACH,CAAC;AAED,OAAO,MAAMY,UAAU,GAAG,SAGpB;EAAA,IAHqB;IACzBpB,MAAM;IACNC;EACF,CAAC;EACC,OAAOkB,WAAW,CAAC;IACjBnB,MAAM;IACNC;EACF,CAAC,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;IACxB;IACA,MAAMF,QAAQ;EAChB,CAAC,CAAC;AACJ,CAAC;AAGD,MAAMM,QAAQ,GAAG,SAA0B;EAAA,IAAzB;IAAErB,MAAM,GAAG,CAAC,CAAC;IAAEC;EAAI,CAAC;EACpCA,GAAG,GAAG,IAAIC,GAAG,CAACD,GAAG,CAAC;EAClBA,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAAC,CAACK,QAAQ,EAAE;EACnD,OAAOC,KAAK,CACVL,GAAG,EACH;IACEM,OAAO,EAAEX,UAAU,EAAE;IACrBY,MAAM,EAAE;EACV,CAAC,CACF;AACH,CAAC;AAED,OAAO,MAAMc,OAAO,GAAG,SAGjB;EAAA,IAHkB;IACtBtB,MAAM;IACNC;EACF,CAAC;EACC,OAAOoB,QAAQ,CAAC;IACdrB,MAAM;IACNC;EACF,CAAC,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;IACpB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;IACxB;IACA,MAAMF,QAAQ;EAChB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}