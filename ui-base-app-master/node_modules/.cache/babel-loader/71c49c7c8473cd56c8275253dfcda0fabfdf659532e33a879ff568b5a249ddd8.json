{"ast":null,"code":"import { getJson, postJson } from 'requests';\nimport { clearToken, getToken, setToken } from 'token';\nimport config from 'config/index';\nimport { ERROR_RECEIVE_USER, ERROR_SIGN_IN, ERROR_SIGN_OUT, ERROR_SIGN_UP, RECEIVE_USER, REQUEST_SIGN_IN, REQUEST_SIGN_OUT, REQUEST_SIGN_UP, REQUEST_USER, SUCCESS_SIGN_IN, SUCCESS_SIGN_OUT, SUCCESS_SIGN_UP } from '../constants/actionTypes';\nconst errorReceiveUser = () => ({\n  type: ERROR_RECEIVE_USER\n});\nconst getUser = () => {\n  const {\n    BASE_URL,\n    USERS_SERVICE\n  } = config;\n  return getJson({\n    url: `${BASE_URL}${USERS_SERVICE}/user/get`\n  }).catch(() => {\n    const storage = {\n      '123123': {\n        authorities: ['МОЖНО_ВОТ_ЭТУ_ШТУКУ', 'МОЖНО_ДРУГУЮ_ШТУКУ'],\n        name: 'Мужик'\n      },\n      '456456': {\n        authorities: ['МОЖНО_ДРУГУЮ_ШТУКУ'],\n        name: 'Другой мужик'\n      }\n    };\n    const token = getToken();\n    return storage[token];\n  });\n};\nconst receiveUser = user => ({\n  type: RECEIVE_USER,\n  payload: user\n});\nconst requestUser = () => ({\n  type: REQUEST_USER\n});\nexport const fetchUser = () => dispatch => {\n  if (getToken()) {\n    dispatch(requestUser());\n    return getUser({\n      dispatch\n    }).catch(() => dispatch(errorReceiveUser()));\n  }\n};\nconst errorSignIn = () => ({\n  type: ERROR_SIGN_IN\n});\nconst requestSignIn = () => ({\n  type: REQUEST_SIGN_IN\n});\nconst successSignIn = payload => ({\n  payload,\n  type: SUCCESS_SIGN_IN\n});\nconst signIn = _ref => {\n  let {\n    login,\n    password\n  } = _ref;\n  const {\n    BASE_URL,\n    USERS_SERVICE\n  } = config;\n  return postJson({\n    body: {\n      login,\n      password\n    },\n    url: `${BASE_URL}${USERS_SERVICE}/user/signIn`\n  }).catch(() => {\n    const storage = {\n      'admin_123': {\n        authorities: ['МОЖНО_ВОТ_ЭТУ_ШТУКУ', 'МОЖНО_ДРУГУЮ_ШТУКУ'],\n        name: 'Мужик',\n        token: '123123'\n      },\n      'user_456': {\n        authorities: ['МОЖНО_ДРУГУЮ_ШТУКУ'],\n        name: 'Другой мужик',\n        token: '456456'\n      }\n    };\n    return storage[`${login}_${password}`];\n  });\n};\nexport const fetchSignIn = _ref2 => {\n  let {\n    login,\n    password\n  } = _ref2;\n  return dispatch => {\n    dispatch(requestSignIn());\n    return signIn({\n      login,\n      password\n    }).then(response => {\n      setToken(response.token);\n      dispatch(successSignIn(response));\n    }).catch(() => dispatch(errorSignIn()));\n  };\n};\nconst errorSignUp = errors => ({\n  payload: errors,\n  type: ERROR_SIGN_UP\n});\nconst requestSignUp = () => ({\n  type: REQUEST_SIGN_UP\n});\nconst successSignUp = () => ({\n  type: SUCCESS_SIGN_UP\n});\nconst signUp = _ref3 => {\n  let {\n    login,\n    password\n  } = _ref3;\n  const {\n    BASE_URL,\n    USERS_SERVICE\n  } = config;\n  return postJson({\n    body: {\n      login,\n      password\n    },\n    url: `${BASE_URL}${USERS_SERVICE}/user/signUp`\n  });\n};\nexport const fetchSignUp = _ref4 => {\n  let {\n    login,\n    password\n  } = _ref4;\n  return dispatch => {\n    dispatch(requestSignUp());\n    return signUp({\n      login,\n      password\n    }).then(() => dispatch(successSignUp())).catch(() => dispatch(errorSignUp()));\n  };\n};\nexport const fetchSignUpAndSignIn = _ref5 => {\n  let {\n    login,\n    password\n  } = _ref5;\n  return dispatch => {\n    return dispatch(fetchSignUp({\n      login,\n      password\n    })).then(() => {\n      return dispatch(fetchSignIn({\n        login,\n        password\n      }));\n    });\n  };\n};\nconst errorSignOut = errors => ({\n  payload: errors,\n  type: ERROR_SIGN_OUT\n});\nconst requestSignOut = () => ({\n  type: REQUEST_SIGN_OUT\n});\nconst successSignOut = () => ({\n  type: SUCCESS_SIGN_OUT\n});\nconst signOut = () => {\n  const {\n    BASE_URL,\n    USERS_SERVICE\n  } = config;\n  return postJson({\n    url: `${BASE_URL}${USERS_SERVICE}/user/signOut`\n  }).catch(() => {\n    // TODO: this catch() is just a stub, which should be removed\n  });\n};\nexport const fetchSignOut = () => dispatch => {\n  dispatch(requestSignOut());\n  return signOut().then(() => {\n    clearToken();\n    dispatch(successSignOut());\n  }).catch(() => dispatch(errorSignOut()));\n};","map":{"version":3,"names":["getJson","postJson","clearToken","getToken","setToken","config","ERROR_RECEIVE_USER","ERROR_SIGN_IN","ERROR_SIGN_OUT","ERROR_SIGN_UP","RECEIVE_USER","REQUEST_SIGN_IN","REQUEST_SIGN_OUT","REQUEST_SIGN_UP","REQUEST_USER","SUCCESS_SIGN_IN","SUCCESS_SIGN_OUT","SUCCESS_SIGN_UP","errorReceiveUser","type","getUser","BASE_URL","USERS_SERVICE","url","catch","storage","authorities","name","token","receiveUser","user","payload","requestUser","fetchUser","dispatch","errorSignIn","requestSignIn","successSignIn","signIn","login","password","body","fetchSignIn","then","response","errorSignUp","errors","requestSignUp","successSignUp","signUp","fetchSignUp","fetchSignUpAndSignIn","errorSignOut","requestSignOut","successSignOut","signOut","fetchSignOut"],"sources":["C:/Users/d1nque/Desktop/ui-base-app-master/src/app/actions/user.js"],"sourcesContent":["import {\n  getJson,\n  postJson,\n} from 'requests';\nimport {\n  clearToken,\n  getToken,\n  setToken,\n} from 'token';\nimport config from 'config/index';\n\nimport {\n  ERROR_RECEIVE_USER,\n  ERROR_SIGN_IN,\n  ERROR_SIGN_OUT,\n  ERROR_SIGN_UP,\n  RECEIVE_USER,\n  REQUEST_SIGN_IN,\n  REQUEST_SIGN_OUT,\n  REQUEST_SIGN_UP,\n  REQUEST_USER,\n  SUCCESS_SIGN_IN,\n  SUCCESS_SIGN_OUT,\n  SUCCESS_SIGN_UP,\n} from '../constants/actionTypes';\n\nconst errorReceiveUser = () => ({\n  type: ERROR_RECEIVE_USER,\n});\n\nconst getUser = () => {\n  const {\n    BASE_URL,\n    USERS_SERVICE,\n  } = config;\n\n  return getJson({\n    url: `${BASE_URL}${USERS_SERVICE}/user/get`,\n  }).catch(() => {\n    const storage = {\n      '123123': {\n        authorities: [\n          'МОЖНО_ВОТ_ЭТУ_ШТУКУ',\n          'МОЖНО_ДРУГУЮ_ШТУКУ',\n        ],\n        name: 'Мужик',\n      },\n      '456456': {\n        authorities: [\n          'МОЖНО_ДРУГУЮ_ШТУКУ',\n        ],\n        name: 'Другой мужик',\n      }\n    };\n    const token = getToken();\n    return storage[token];\n  })\n};\n\nconst receiveUser = (user) => ({\n  type: RECEIVE_USER,\n  payload: user,\n});\n\nconst requestUser = () => ({\n  type: REQUEST_USER,\n});\n\nexport const fetchUser = () => (dispatch) => {\n  if (getToken()) {\n    dispatch(requestUser());\n    return getUser({\n      dispatch,\n    }).catch(() => dispatch(errorReceiveUser()));\n  }\n};\n\nconst errorSignIn = () => ({\n  type: ERROR_SIGN_IN,\n});\n\nconst requestSignIn = () => ({\n  type: REQUEST_SIGN_IN,\n});\n\nconst successSignIn = payload => ({\n  payload,\n  type: SUCCESS_SIGN_IN,\n});\n\nconst signIn = ({\n  login,\n  password,\n}) => {\n  const {\n    BASE_URL,\n    USERS_SERVICE,\n  } = config;\n\n  return postJson({\n    body: {\n      login,\n      password,\n    },\n    url: `${BASE_URL}${USERS_SERVICE}/user/signIn`,\n  }).catch(() => {\n    const storage = {\n      'admin_123': {\n        authorities: [\n          'МОЖНО_ВОТ_ЭТУ_ШТУКУ',\n          'МОЖНО_ДРУГУЮ_ШТУКУ',\n        ],\n        name: 'Мужик',\n        token: '123123',\n      },\n      'user_456': {\n        authorities: [\n          'МОЖНО_ДРУГУЮ_ШТУКУ',\n        ],\n        name: 'Другой мужик',\n        token: '456456',\n      }\n    };\n    return storage[`${login}_${password}`];\n  });\n};\n\nexport const fetchSignIn = ({\n  login,\n  password,\n}) => (dispatch) => {\n  dispatch(requestSignIn());\n  return signIn({\n    login,\n    password,\n  }).then((response) => {\n    setToken(response.token);\n    dispatch(successSignIn(response));\n  }).catch(() => dispatch(errorSignIn()));\n};\n\nconst errorSignUp = errors => ({\n  payload: errors,\n  type: ERROR_SIGN_UP,\n});\n\nconst requestSignUp = () => ({\n  type: REQUEST_SIGN_UP,\n});\n\nconst successSignUp = () => ({\n  type: SUCCESS_SIGN_UP,\n});\n\nconst signUp = ({\n  login,\n  password,\n}) => {\n  const {\n    BASE_URL,\n    USERS_SERVICE,\n  } = config;\n\n  return postJson({\n    body: {\n      login,\n      password,\n    },\n    url: `${BASE_URL}${USERS_SERVICE}/user/signUp`,\n  });\n};\n\nexport const fetchSignUp = ({\n  login,\n  password,\n}) => (dispatch) => {\n  dispatch(requestSignUp());\n  return signUp({\n    login,\n    password,\n  }).then(() => dispatch(successSignUp()))\n    .catch(() => dispatch(errorSignUp()));\n};\n\nexport const fetchSignUpAndSignIn = ({\n  login,\n  password,\n}) => (dispatch) => {\n  return dispatch(fetchSignUp({\n    login,\n    password,\n  })).then(() => {\n    return dispatch(fetchSignIn({\n      login,\n      password,\n    }))\n  });\n};\n\nconst errorSignOut = errors => ({\n  payload: errors,\n  type: ERROR_SIGN_OUT,\n});\n\nconst requestSignOut = () => ({\n  type: REQUEST_SIGN_OUT,\n});\n\nconst successSignOut = () => ({\n  type: SUCCESS_SIGN_OUT,\n});\n\nconst signOut = () => {\n  const {\n    BASE_URL,\n    USERS_SERVICE,\n  } = config;\n\n  return postJson({\n    url: `${BASE_URL}${USERS_SERVICE}/user/signOut`,\n  }).catch(() => {\n    // TODO: this catch() is just a stub, which should be removed\n  });\n};\n\nexport const fetchSignOut = () => (dispatch) => {\n  dispatch(requestSignOut());\n  return signOut()\n    .then(() => {\n      clearToken();\n      dispatch(successSignOut());\n  }).catch(() => dispatch(errorSignOut()))\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}