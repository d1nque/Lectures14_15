{"ast":null,"code":"import { getJson, postJson } from 'requests';\nimport config from 'config/index';\nimport { RECEIVE_BOOK, ERROR_GET_BOOK, REQUEST_BOOK, REQUEST_ADD_BOOK, SUCCESS_ADD_BOOK, ERROR_ADD_BOOK } from '../constants/actionTypes';\nconst errorGetBook = () => ({\n  type: ERROR_GET_BOOK\n});\nconst getBook = id => {\n  const {\n    BOOKS_URL\n  } = config;\n  return getJson({\n    url: `${BOOKS_URL}/${id.id}`\n  }).catch(() => {\n    console.log(\"ploho1\");\n  });\n};\nconst receiveBook = book => ({\n  type: RECEIVE_BOOK,\n  payload: book\n});\nconst requestBook = () => ({\n  type: REQUEST_BOOK\n});\nexport const fetchBook = id => dispatch => {\n  dispatch(requestBook());\n  return getBook({\n    dispatch,\n    id\n  }).then(book => dispatch(receiveBook(book))).catch(() => dispatch(errorGetBook()));\n};\nconst successAddBook = book => ({\n  type: SUCCESS_ADD_BOOK,\n  payload: book\n});\nconst requestAddBook = () => ({\n  type: REQUEST_ADD_BOOK\n});\nconst errorAddBook = () => ({\n  type: ERROR_ADD_BOOK\n});\nconst addBook = bookTitle => {\n  const {\n    BASE_URL\n  } = config;\n  return postJson({\n    body: {\n      title: `${bookTitle}`,\n      author: '1',\n      category: 'Science'\n    },\n    url: `${BASE_URL}/add`\n  }).catch(() => {\n    // TODO: this catch() is just a stub, which should be removed\n  });\n};\nexport const fetchAddBook = (bookTitle, id) => dispatch => {\n  dispatch(requestAddBook());\n  return addBook(bookTitle).then(() => {\n    dispatch(successAddBook());\n  }).catch(() => dispatch(errorAddBook()));\n};","map":{"version":3,"names":["getJson","postJson","config","RECEIVE_BOOK","ERROR_GET_BOOK","REQUEST_BOOK","REQUEST_ADD_BOOK","SUCCESS_ADD_BOOK","ERROR_ADD_BOOK","errorGetBook","type","getBook","id","BOOKS_URL","url","catch","console","log","receiveBook","book","payload","requestBook","fetchBook","dispatch","then","successAddBook","requestAddBook","errorAddBook","addBook","bookTitle","BASE_URL","body","title","author","category","fetchAddBook"],"sources":["C:/Users/d1nque/Desktop/ui-base-app-master/src/pages/Book/actions/book.js"],"sourcesContent":["import {\n  getJson,\n  postJson,\n} from 'requests';\nimport config from 'config/index';\nimport {\n  RECEIVE_BOOK,\n  ERROR_GET_BOOK,\n  REQUEST_BOOK, \n  REQUEST_ADD_BOOK,\n  SUCCESS_ADD_BOOK,\n  ERROR_ADD_BOOK,\n} from '../constants/actionTypes';\n\n\n\nconst errorGetBook = () => ({\n  type: ERROR_GET_BOOK,\n});\n\nconst getBook = (id) => {\n  const {\n    BOOKS_URL,\n  } = config;\n  return getJson({\n    url: `${BOOKS_URL}/${id.id}`,\n  })\n  .catch(() => {\n    console.log(\"ploho1\");\n  });\n};\n\nconst receiveBook = (book) => ({\n  type: RECEIVE_BOOK,\n  payload: book,\n});\n\nconst requestBook = () => ({\n  type: REQUEST_BOOK,\n});\n\nexport const fetchBook = (id) => (dispatch) => {\n    dispatch(requestBook());\n    return getBook({\n      dispatch, id\n    }).then(book => dispatch(receiveBook(book)))\n      .catch(() => dispatch(errorGetBook()));\n};\n\n\n\nconst successAddBook = (book) => ({\n  type: SUCCESS_ADD_BOOK,\n  payload: book,\n});\n\nconst requestAddBook = () => ({\n  type: REQUEST_ADD_BOOK,\n});\n\nconst errorAddBook = () => ({\n  type: ERROR_ADD_BOOK,\n});\n\n\nconst addBook = (bookTitle) => {\n  const {\n    BASE_URL,\n  } = config;\n  return postJson({\n    body:{\n      title: `${bookTitle}`,\n      author: '1',\n      category: 'Science'\n    },\n    url: `${BASE_URL}/add`,\n  }).catch(() => {\n    // TODO: this catch() is just a stub, which should be removed\n  });\n};\n\nexport const fetchAddBook = (bookTitle, id) => (dispatch) => {\n  dispatch(requestAddBook());\n  return addBook(bookTitle)\n    .then(() => {dispatch(successAddBook());})\n    .catch(() => dispatch(errorAddBook()))\n};\n\n\n\n\n\n\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,QAAQ,QACH,UAAU;AACjB,OAAOC,MAAM,MAAM,cAAc;AACjC,SACEC,YAAY,EACZC,cAAc,EACdC,YAAY,EACZC,gBAAgB,EAChBC,gBAAgB,EAChBC,cAAc,QACT,0BAA0B;AAIjC,MAAMC,YAAY,GAAG,OAAO;EAC1BC,IAAI,EAAEN;AACR,CAAC,CAAC;AAEF,MAAMO,OAAO,GAAIC,EAAE,IAAK;EACtB,MAAM;IACJC;EACF,CAAC,GAAGX,MAAM;EACV,OAAOF,OAAO,CAAC;IACbc,GAAG,EAAG,GAAED,SAAU,IAAGD,EAAE,CAACA,EAAG;EAC7B,CAAC,CAAC,CACDG,KAAK,CAAC,MAAM;IACXC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,WAAW,GAAIC,IAAI,KAAM;EAC7BT,IAAI,EAAEP,YAAY;EAClBiB,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,MAAME,WAAW,GAAG,OAAO;EACzBX,IAAI,EAAEL;AACR,CAAC,CAAC;AAEF,OAAO,MAAMiB,SAAS,GAAIV,EAAE,IAAMW,QAAQ,IAAK;EAC3CA,QAAQ,CAACF,WAAW,EAAE,CAAC;EACvB,OAAOV,OAAO,CAAC;IACbY,QAAQ;IAAEX;EACZ,CAAC,CAAC,CAACY,IAAI,CAACL,IAAI,IAAII,QAAQ,CAACL,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC,CACzCJ,KAAK,CAAC,MAAMQ,QAAQ,CAACd,YAAY,EAAE,CAAC,CAAC;AAC5C,CAAC;AAID,MAAMgB,cAAc,GAAIN,IAAI,KAAM;EAChCT,IAAI,EAAEH,gBAAgB;EACtBa,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,MAAMO,cAAc,GAAG,OAAO;EAC5BhB,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,MAAMqB,YAAY,GAAG,OAAO;EAC1BjB,IAAI,EAAEF;AACR,CAAC,CAAC;AAGF,MAAMoB,OAAO,GAAIC,SAAS,IAAK;EAC7B,MAAM;IACJC;EACF,CAAC,GAAG5B,MAAM;EACV,OAAOD,QAAQ,CAAC;IACd8B,IAAI,EAAC;MACHC,KAAK,EAAG,GAAEH,SAAU,EAAC;MACrBI,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDpB,GAAG,EAAG,GAAEgB,QAAS;EACnB,CAAC,CAAC,CAACf,KAAK,CAAC,MAAM;IACb;EAAA,CACD,CAAC;AACJ,CAAC;AAED,OAAO,MAAMoB,YAAY,GAAG,CAACN,SAAS,EAAEjB,EAAE,KAAMW,QAAQ,IAAK;EAC3DA,QAAQ,CAACG,cAAc,EAAE,CAAC;EAC1B,OAAOE,OAAO,CAACC,SAAS,CAAC,CACtBL,IAAI,CAAC,MAAM;IAACD,QAAQ,CAACE,cAAc,EAAE,CAAC;EAAC,CAAC,CAAC,CACzCV,KAAK,CAAC,MAAMQ,QAAQ,CAACI,YAAY,EAAE,CAAC,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}